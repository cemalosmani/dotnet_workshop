@model DTOLayer.DTOs.AdminDTO
@{
    ViewBag.Title = "ResumeDemo - Edit Profile";
    Layout = "DashboardLayout";
}

@using (Html.BeginForm("Index", "Profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <h2 class="card-title">Edit Profile</h2>
    <br/>
    <div class="col-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <div class="profile-image">
                    <img src="/assets/@Model.AdminImage" class="rounded-circle circle-border m-b-md" alt="profile">
                    @if (Model.AdminImage != "defaultpp.png")
                    {
                        <a href="/Admin/Profile/RemoveProfilePhoto" class="btn btn-danger">Remove Profile Photo</a>
                        <br/>
                    }
                </div>
                <br/>
                <div class="custom-file">
                    <input id="logo" type="file" name="AdminImageFile" class="custom-file-input" onchange="updateFileName(this)">
                    <label for="logo" class="custom-file-label">Choose file...</label>
                </div>

                @Html.HiddenFor(x => x.AdminId, new { @class = "form-control" })
                <div class="form-group">
                    <label for="exampleInputName1">Full Name</label>
                    @Html.TextBoxFor(x => x.AdminFullName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.AdminFullName)
                </div>
                <div class="form-group">
                    <label for="exampleInputName1">About</label>
                    @Html.TextAreaFor(x => x.AdminAbout, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.AdminAbout)
                </div>
                <div class="form-group">
                    <label for="exampleInputEmail3">E-Mail</label>
                    @Html.TextBoxFor(x => x.AdminMail, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.AdminMail)
                </div>
                <div class="form-group">
                    <label for="exampleInputPassword1">Password</label>
                    @Html.PasswordFor(x => x.AdminPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.AdminPassword)
                </div>
                <button type="submit" class="btn btn-primary">Update</button>
                <a href="/Admin/Dashboard/Index" class="btn btn-close">Cancel</a>
            </div>
        </div>
    </div>
    <script>
        function updateFileName(input) {
            var label = input.nextElementSibling;
            if (input.files.length > 0) {
                label.innerText = input.files[0].name;
            } else {
                label.innerText = 'Choose file...';
            }
        }
    </script>
}
